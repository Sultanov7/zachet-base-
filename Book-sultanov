
назиров21
/
Zachet_Data_base
Общественный
Код
вопросы
Пулл-реквесты
Действия
Проекты
Безопасность
Инсайты
Zachet_Data_base/book_nazirov.sql _
@nazirov21
nazirov21 Обновление book_nazirov.sql
 1 участник
741 строка (637 строк)  20,8 КБ
-- 1.1.8

СОЗДАТЬ  ТАБЛИЦУ  книга (
    book_id INT ПЕРВИЧНЫЙ  КЛЮЧ AUTO_INCREMENT,
    титул ВАРЧАР ( 50 ),
    автор ВАРЧАР ( 30 ),
    цена ДЕСЯТИЧНАЯ ( 8 , 2 ),
    сумма INT
);

-- 1.1.9

ВКЛАДИТЬ В КНИГУ (название, автор, цена, количество) ЦЕННОСТИ   ( « Мастер и Маргарита » , « Булгаков М.А. » , 670. 99 , 3 ) ;
ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.1.10

ВКЛАДИТЬ В КНИГУ (название, автор, цена, объем) ЦЕННОСТИ   ( « Белая гвардия » , « Булгаков М.А. » , 540 . 50 , 5 );
ВКЛАДИТЬ В КНИГУ (название, автор, цена, количество) ЦЕННОСТИ   ( " Идиот " , " Достойевский Ф.М. " , 460. 00 , 10 ) ;
ВКЛАДИТЬ В КНИГУ (название, автор, цена, сумма) ЦЕННОСТИ   ( « Братья Карамазовы » , « Достойевский Ф.М. » , 799. 01 , 2 ) ;

ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.2.2
ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.2.3

ВЫБЕРИТЕ автора, название, цену    ИЗ книги;
-- 1.2.4
ВЫБЕРИТЕ название   КАК Название, автора КАК Автор   ИЗ книги;

-- 1.2.5
ВЫБЕРИТЕ название, количество, количество *  1 . 65   AS пакет  
ИЗ книги;

-- 1.2.6
ВЫБЕРИТЕ название, автора, сумму, ОКРУГЛ (цена / 100  *  70 , 2 )   КАК new_price
ИЗ книги;

-- 1.2.7
ВЫБЕРИТЕ автора,название, ОКРУГ(ЕСЛИ(автор =  " Булгаков М.А. " , цена *  1 .1 , ЕСЛИ(автор = " Есенин С.А. " , цена * 1 .05 , цена * 1 )) , 2 )   КАК новая_цена ИЗ книги;  

-- 1.2.8

ВЫБЕРИТЕ автора, название, цену
ИЗ книги
ГДЕ сумма <  10 ;

-- 1.2.9
ВЫБЕРИТЕ название, автора, цену, сумму
ИЗ книги
ГДЕ (цена < 500  ИЛИ цена >  600 ) И цена * сумма >=  5000 ;         

-- 1.2.10
ВЫБЕРИТЕ название, автора
ИЗ книги
ГДЕ (цена <  800  И цена > 540 . 50 ) И количество =  2  ИЛИ количество =  3  ИЛИ количество =  5  ИЛИ количество =  7 ;

-- 1.2.11
ВЫБЕРИТЕ автора, название
ИЗ книги
ГДЕ (количество >= 2  И количество <=  14 )
ЗАКАЗАТЬ ПО автору Описание , название ;

-- 1.2.12
ВЫБЕРИТЕ название, автора ИЗ книги
Где заголовок LIKE  " _% _% "  и
(автору нравится  ' % С._.% '  или автору нравится  ' % _.С.% ' )
ПОРЯДОК ПО  1  ASC , 2  DESC ;

-- 1.2.13
SELECT  *  FROM book WHERE book_id = 1  ИЛИ book_id =  3  ИЛИ book_id =  5 ;


-- 1.3.2
ВЫБЕРИТЕ   сумму
ИЗ книги
СГРУППИРОВАТЬ ПО сумме;

-- 1.3.2
ВЫБЕРИТЕ   сумму
ИЗ книги
СГРУППИРОВАТЬ ПО сумме;

-- 1.3.3
ВЫБЕРИТЕ автора AS Автор, COUNT (название) AS сердечно-сосудистых_книг, SUM (количество) AS Количество_экземпляров
ИЗ книги
СГРУППИРОВАТЬ ПО автору;

-- 1.3.4
ВЫБЕРИТЕ автора, MIN (цена) AS Минимальная_цена, MAX (цена) AS максимальная_цена, AVG (цена) AS Средняя_цена
ИЗ книги
СГРУППИРОВАТЬ ПО автору;

-- 1.3.5
ВЫБЕРИТЕ автора, СУММА (цена * сумма) КАК Стоимость, ОКРУГЛ( ( СУММА (цена * сумма) *  0 . 18 ) /  1 . 18 , 2 ) КАК НДС, ОКРУГЛ( СУММА (цена * сумма) -   ( СУММА (цена * сумма ) *  0 .18 ) / 1 .18 , 2 ) AS Стоимость_без_НДС _ 
ИЗ книги
СГРУППИРОВАТЬ ПО автору;

-- 1.3.6
ВЫБРАТЬ 
    MIN (цена) AS Минимальная_цена,
    MAX (цена) AS максимальная_цена,
    ROUND( AVG (цена), 2 ) As   Средняя_цена
ИЗ книги;

-- 1.3.7
ВЫБРАТЬ 
   ОКРУГЛ( AVG (цена), 2 ) AS Средняя_цена,
   ОКРУГЛ( СУММА (цена * количество), 2 ) КАК Стоимость
ИЗ книги
ГДЕ сумма МЕЖДУ 5  И  14 ;

-- 1.3.8
ВЫБРАТЬ 
    автор,
   Сумма ( цена * количество) Как Стоимость
ИЗ книги

Где название <>  " Идиот "  И название <>  " Белая гвардия "  СГРУППИРОВАТЬ ПО АВТОРУ  , ИМЕЮЩЕМУ СУММУ ( цена * сумма) >  5000
 ЗАКАЗАТЬ ПО Стоимость DESC ;

-- 1.3.9
ВЫБЕРИТЕ book_id, автора КАК Автор, ОКРУГЛ( СРЕДНЯЯ (цена)) КАК Средняя_цена
ИЗ книги
СГРУППИРОВАТЬ ПО book_id, автор
ИМЕЮЩАЯ Средняя_цена > 500 ;

-- 1.4.2
ВЫБЕРИТЕ автора, название, цену
ИЗ книги
ГДЕ цена <= (
    ВЫБЕРИТЕ  СРЕДНЕЕ (цена)
    ИЗ книги)
ЗАКАЗАТЬ ПО ЦЕНЕ DESC ;

-- 1.4.3
ВЫБЕРИТЕ автора, название, цену
ИЗ книги
ГДЕ цена <= (
    ВЫБЕРИТЕ  МИН (цена) +   150 
    ИЗ книги)
ЗАКАЗАТЬ ПО ЦЕНЕ;

-- 1.4.4
ВЫБЕРИТЕ   автора, название, количество
ИЗ книги
ГДЕ сумма В (
        ВЫБЕРИТЕ сумму
        ИЗ книги
        СГРУППИРОВАТЬ ПО сумме
        Имея  количество (количество) =  1
      );

-- 1.4.5
ВЫБЕРИТЕ автора, название, цену
ИЗ книги
ГДЕ цена < ВСЕ (
        ВЫБЕРИТЕ  МАКС. (цена)
        ИЗ книги
        СГРУППИРОВАТЬ ПО автору
      );

-- 1.4.6
ВЫБЕРИТЕ название, автора, сумму, ( ВЫБЕРИТЕ  МАКС (сумму) ИЗ книги) - сумма КАК Заказ
ИЗ книги
ГДЕ сумма <> ( ВЫБЕРИТЕ  МАКСИМАЛЬНУЮ (сумму) ИЗ книги)

-- 1.4.7

ВЫБЕРИТЕ автора, название, цену
ИЗ книги
ГДЕ цена <= (
    ВЫБЕРИТЕ  СРЕДНЕЕ (цена)
    ИЗ книги)
ЗАКАЗАТЬ ПО ЦЕНЕ DESC ;

-- 1.5.2
СОЗДАТЬ  ТАБЛИЦУ  поставки (
    Supply_id INT ПЕРВИЧНЫЙ  КЛЮЧ AUTO_INCREMENT,
    титул ВАРЧАР ( 50 ),
    автор ВАРЧАР ( 30 ),
    цена ДЕСЯТИЧНАЯ ( 8 , 2 ),
    сумма INT
);

-- 1.5.3
 ВСТАВЬТЕ В ПОСТАВКУ (название,автор,цена,количество)
    ЦЕННОСТИ 
    ( « Лирика » , « Пастернак Б.Л. » , 518. 99 , 2 ) ,
    ( « Черный человек » , « Есенин С.А. » , 570. 20 , 6 ) ,
    ( « Белая гвардия » , « Булгаков М.А. » , 540. 50 , 7 ) ,
    ( « Идиот » , « Достойевский Ф.М. » , 360. 80 , 3 ) ;

-- 1.5.4
ВСТАВИТЬ В КНИГУ (название, автор, цена, сумма)
ВЫБЕРИТЕ название, автора, цену, сумму

ОТ ПОСТАВКИ ОТКУДА автор <>  " Булгаков М.А. "  И автор <>  " Достоевский Ф.М. " ;

ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.5.5
ВСТАВИТЬ В КНИГУ (название, автор, цена, сумма)
ВЫБЕРИТЕ название, автора, цену, сумму
ОТ поставки
ГДЕ автор НЕ В (
        ВЫБЕРИТЕ автора
        ИЗ книги
      );

ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.5.6
ОБНОВИТЬ книгу
УСТАНОВИТЬ цену =  0 . 9  * цена , где сумма ОТ 5  ДО  10 ;

ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.5.7
ОБНОВИТЬ книгу
УСТАНОВИТЬ покупку = ЕСЛИ (купить > количество, количество, купить),
    цена = ЕСЛИ (покупка =  0 , цена *  0,9 , цена * 1 ) ; 
    
    
ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.5.8
ОБНОВЛЕНИЕ книга, поставка
 книга СЕТ . сумма  =  книга . сумма  +  поставка . сумма ,
    книга . цена  = ( заказ . цена  +  предложение . цена ) / 2
ГДЕ  книга . название  =  предложение . название  И  книга . автор  =  поставка . автор ;
ВЫБЕРИТЕ  *  ИЗ книги;

-- 1.5.9
УДАЛИТЬ  ИЗ ПОСТАВКИ
ГДЕ автор В (
     ВЫБЕРИТЕ автора
     ИЗ книги
     СГРУППИРОВАТЬ ПО автору
     ЕСЛИ  СУММА (сумма) >  10
     );
ВЫБЕРИТЕ  *  ИЗ поставки;

-- 1.5.10
СОЗДАТЬ  ТАБЛИЦУ  заказа  КАК
ВЫБЕРИТЕ автора, название,
   ( ВЫБРАТЬ ОКРУГЛ( СРЕДНЕЕ (сумма))
    ИЗ книги) КАК сумма
ИЗ книги
ГДЕ сумма < ( ВЫБЕРИТЕ  СРЕДНЕЕ (сумма)
    ИЗ книги);

ВЫБЕРИТЕ  *  ИЗ заказа;

-- 1.5.11
ВСТАВИТЬ В КНИГУ (название, автор, цена, сумма)
ВЫБЕРИТЕ название, автора, цену, сумму

ОТ ПОСТАВКИ ОТКУДА автор <>  " Булгаков М.А. "  И автор <>  " Достоевский Ф.М. " ;

ВЫБЕРИТЕ  *  ИЗ книги;


-- 1.6.2
ВЫБЕРИТЕ имя, город, суточные, дату_первая, дата_последняя   ИЗ поездки
ГДЕ имя LIKE  ' %а % '  ORDER BY date_last DESC ;

-- 1.6.3
ВЫБЕРИТЕ название ИЗ поездки
ГДЕ город =  " Москва "  СГРУППИРОВАТЬ ПО названию ПОРЯДОК ПО названию ASC ;


-- 1.6.4
ВЫБЕРИТЕ город, ( ВЫБЕРИТЕ   КОЛИЧЕСТВО (город)) КАК Количество
ИЗ поездки
СГРУППИРОВАТЬ ПО ГОРОДУ СКАЧАТЬ ПО ГОРОДУ ;


-- 1.6.5
ВЫБЕРИТЕ город, ( ВЫБЕРИТЕ   КОЛИЧЕСТВО (город)) КАК Количество
ИЗ поездки
СГРУППИРОВАТЬ ПО ГОРОДАМ ОТКАЗАТЬ ПО Количество DESC  LIMIT  2 ;


-- 1.6.6
ВЫБЕРИТЕ имя,город, ( ВЫБЕРИТЕ   DATEDIFF(последняя_дата, первая_дата ) +  1 ) КАК Длительность
ИЗ поездки КУДА город <>  " Москва "  И город <>  " Санкт-Петербург "  ЗАКАЗАТЬ ПО Длительность DESC 

-- 1.6.7
ВЫБЕРИТЕ имя, город, дата_первая, дата_последняя
ИЗ поездки
где DATEDIFF(date_last, date_first) IN (
    ВЫБЕРИТЕ  МИН (DATEDIFF (дата_последняя, ​​дата_первая))
    ИЗ поездки
);          

-- 1.6.8
ВЫБЕРИТЕ имя, город, дата_первая, дата_последняя
ИЗ поездки
где МЕСЯЦ(дата_последний) = МЕСЯЦ(дата_первый) ORDER BY город, имя;

-- 1.6.9
ВЫБЕРИТЕ   MONTHNAME(date_first) AS Месяц, Count (MONTHNAME(date_first)) AS Количество
ИЗ поездки
СГРУППИРОВАТЬ ПО Месяц СОРТИРОВАТЬ ПО Количество DESC , Месяц;

-- 1.6.10
ВЫБЕРИТЕ имя, город, первую_дату, (DATEDIFF(date_last, date_first) + 1 ) * per_diem   AS   Сумма
ИЗ поездки
ГДЕ МЕСЯЦ(дата_первая) =  2  ИЛИ МЕСЯЦ(дата_первая) =  3  ORDER BY name, Сумма DESC ;


-- 1.6.11
ВЫБЕРИТЕ имя, СУММА ((DATEDIFF(date_last, date_first) +  1 ) * per_diem) AS Сумма
ИЗ поездки
ГДЕ имя В (
    ВЫБЕРИТЕ имя
    ИЗ поездки
    СГРУППИРОВАТЬ ПО имени
    ИМЕЕТ  СЧЕТ (имя) >  3 )
СГРУППИРОВАТЬ ПО имени
ЗАКАЗАТЬ ПО СУММЕ DESC

--   1.7.2

СОЗДАТЬ  ТАБЛИЦУ  отлично (
    Fine_id INT ПЕРВИЧНЫЙ  КЛЮЧ AUTO_INCREMENT,
    имя ВАРЧАР ( 30 ),
    номерной знак VARCHAR ( 6 ),
    нарушение VARCHAR ( 50 ),
    sum_fine ДЕСЯТИЧНОЕ ( 8 , 2 ) ,
    date_violation ДАТАВРЕМЯ,
    date_payment ДАТАВРЕМЯ	
);

-- 1.7.3

ВСТАВИТЬ В штраф(ФИО, номерной знак, нарушение, сумма_штрафа, дата_нарушения, дата_платежа )
значения ( ' Баранов П.Е. ' , ' Р523ВТ ' , ' Превышение скорости(от 40 до 60) ' , null , ' 2020-02-14 ' , null ),
( ' Абрамова К.А. ' , ' О111АВ ' , ' Проезд на запрещающий сигнал ' , null , ' 2020-02-23 ' , null ),
( ' Яковлев Г.Р. ' , ' Т330ТТ ' , ' Проезд на запрещающий сигнал ' , null , ' 03.03.2020 ' , null );

-- 1.7.4
ОБНОВИТЬ нормально
УСТАНОВИТЕ sum_fine = ( ВЫБРАТЬ sum_fine ОТ traffic_violation ГДЕ  traffic_violation .нарушение = штраф .нарушение ) _ _
ГДЕ sum_fine равно NULL

-- 1.7.5
/* ВЫБЕРИТЕ имя, номерной знак, нарушение
от штрафа
группировать по имени, номерному знаку, нарушению
имея количество (*) > 1; */

-- 1.7.6
создать  таблицу   NewTable  AS  
(
    выберите имя, номерной знак, нарушение из штрафа
СГРУППИРОВАТЬ ПО имя, номерной знак, нарушение
ИМЕЕТ  количество (нарушение) > 1
ЗАКАЗАТЬ ПО имени, номерному знаку, нарушению
);
ОБНОВЛЕНИЕ в порядке, NewTable
УСТАНОВИТЕ сумму_точности = суммы_точности * 2 
КУДА 
хорошо . имя = НоваяТаблица . имя  И  штраф . number_plate = НоваяТаблица . номерной знак  И   хорошо . нарушение = новая таблица . нарушение
И  хорошо . date_payment IS NULL ;
выберите  *  из штрафа;

-- 1.7.7
ОБНОВЛЕНИЕ штраф f, платеж p
НАБОР  ф . дата_платежа  =  р . дата_платеж ,
    ф . sum_fine  = IF(DATEDIFF( f . date_payment , f . date_violation ) <=  20 , f . sum_fine  /  2 , f . sum_fine )
ГДЕ  ф . имя  =  р . имя  И
      ф . номерной знак  =  p . номерной знак  И
      ф . нарушение  =  р . нарушение  И
      ф . дата_нарушение  =  р . date_violation  И
      ф . date_payment IS NULL ;

ВЫБЕРИТЕ имя, нарушение, сумму_штрафа, дату_нарушения, дату_платежа
С штрафом;

-- 1.7.8
СОЗДАТЬ  ТАБЛИЦУ  _
    ( ВЫБЕРИТЕ имя, номерной знак, нарушение, сумму_штрафа, дату_нарушения
     ИЗ штрафа
     ГДЕ date_payment IS NULL );
     
ВЫБЕРИТЕ  *  FROM back_payment

-- 1.7.9
УДАЛИТЬ  ИЗ штрафа
ГДЕ date_violation < ' 2020-02-01 ' ;
ВЫБЕРИТЕ  *  ОТ отлично;

-- 1.8.2
ВЫБРАТЬ 
   CONCAT(id_модуля, ' . ' ,lesson_position, " . " ,step_position, "  " , CONCAT(LEFT(step_name, 50 ), ' ... ' )) КАК Шаг,
   примечание КАК Примечание
С шага
        Урок ВНУТРЕННЕГО СОЕДИНЕНИЯ ИСПОЛЬЗОВАНИЕ(lesson_id)
        Модуль ВНУТРЕННЕГО СОЕДИНЕНИЯ ИСПОЛЬЗОВАНИЕ (module_id)
        INNER JOIN step_keyword USING(step_id)
        ИСПОЛЬЗОВАНИЕ ключевого слова INNER JOIN (keyword_id)
ГДЕ ключевое_имя =  ' DISTINCT '
ЗАКАЗАТЬ ПО  1 ;

-- 2.1.6
СОЗДАТЬ  ТАБЛИЦУ  автора (
        author_id	 INT ПЕРВИЧНЫЙ  КЛЮЧ AUTO_INCREMENT,
        имя_автор	 VARCHAR ( 50 )
);

-- 2.1.7
вставить в автора (имя_автора)
ценности ( ' Булгаков М.А. ' ), ( ' Достойевский Ф.М. ' ), ( ' Есенин С.А. ' ), ( ' Пастернак Б.Л. ' );

-- 2.1.8
СОЗДАТЬ  ТАБЛИЦУ  книга (
    book_id INT ПЕРВИЧНЫЙ  КЛЮЧ AUTO_INCREMENT,
    титул ВАРЧАР ( 50 ),
    author_id INT  NOT NULL ,
    жанр_id INT ,
    цена ДЕСЯТИЧНАЯ ( 8 , 2 ),
    сумма INT ,
    ИНОСТРАННЫЙ КЛЮЧ (author_id)   ССЫЛКИ автора (author_id),
    ИНОСТРАННЫЙ КЛЮЧ (genre_id)   ССЫЛКИ жанр (genre_id)
);
-- 2.1.9
СОЗДАТЬ  ТАБЛИЦУ  книга (
    book_id INT ПЕРВИЧНЫЙ  КЛЮЧ AUTO_INCREMENT,
    титул ВАРЧАР ( 50 ),
    author_id INT  NOT NULL ,
    жанр_id INT ,
    цена ДЕСЯТИЧНАЯ ( 8 , 2 ),
    сумма INT ,
    ЗАРУБЕЖНЫЙ КЛЮЧ (author_id)   ССЫЛКИ автора (author_id) НА УДАЛЕНИЕ КАСКАДА ,
    FOREIGN KEY (genre_id)   REFERENCES жанр (genre_id) ON DELETE  SET  NULL
);

-- 2.1.11
ВСТАВИТЬ В книгу (название, author_id , жанр_id, цена, количество)
ЦЕННОСТИ ( « Стихотворения и поэмы » , 3 , 2 , 650. 00 , 15 ) ,
( ' Черный человек ' , 3 , 2 , 570. 20 , 6 ) ,
( « Лирика » , 4 , 2 , 518. 99 , 2 ) ;

-- 2.2.2
ВЫБЕРИТЕ название, название_жанр, цену
ИЗ
жанр ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга
 жанр ПО . идентификатор_жанра  =  книга . id_genre
ГДЕ количество > 8  ЗАКАЗАТЬ ПО ЦЕНЕ DESC ;
-- 2.2.3
ВЫБЕРИТЕ название_жанр
Книга FROM жанра LEFT JOIN
 жанр ПО . идентификатор_жанра  =  книга . id_genre
ГДЕ  книга . ИД жанра равен NULL ;
-- 2.2.4
ВЫБЕРИТЕ name_city, name_author, (DATE_ADD( ' 2020-01-01 ' , INTERVAL FLOOR(RAND() *  365 ) DAY)) как Дата
ИЗ 
    город, автор    
    ЗАКАЗАТЬ по названию_городу, дате по убыванию ;
-- 2.2.5
ВЫБЕРИТЕ имя_жанр, название, имя_автор
ИЗ
    книга
    ВНУТРЕННЕЕ СОЕДИНЕНИЕ   автора ON  author . id_автора  =  книга . author_id
    INNER JOIN жанр ON  жанр . идентификатор_жанра  =  книга . id_genre
ГДЕ название_жанр НРАВИТСЯ  ' Роман '  УСТРОЙСТВО ПО названию;
-- 2.2.6
ВЫБЕРИТЕ имя_автора, СУММА ( сумма) КАК Количество
ИЗ 
    автор LEFT JOIN книга
    на  автор . id_автора  =  книга . author_id
СГРУППИРОВАТЬ ПО name_author
ЕСЛИ  СУММА (сумма) <  10  ИЛИ  СУММА (сумма) IS NULL
ЗАКАЗАТЬ ПО Количество;
-- 2.2.7
ВЫБЕРИТЕ имя_автора
ИЗ 
    автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга
    на  автор . id_автора  =  книга . author_id
СГРУППИРОВАТЬ ПО name_author
        HAVING  COUNT (отличающийся(genre_id)) =  1 ;
-- 2.2.8
ВЫБЕРИТЕ    название, имя_автора, название_жанр, цену, сумму
ИЗ 
    книга
    ВНУТРЕННЕЕ СОЕДИНЕНИЕ жанра ON  book . идентификатор_жанра  =  жанр . id_genre
    ВНУТРЕННЕЕ СОЕДИНЕНИЕ автора ON   book . ID_автора  =  автор . author_id
ГДЕ  жанр . ИД жанра  IN
         ( ВЫБЕРИТЕ  query_in_1 . идентификатор_жанра
          ИЗ 
              ( ВЫБЕРИТЕ идентификатор жанра, СУММА ( количество) КАК сумма_суммы
                ИЗ книги
                СГРУППИРОВАТЬ ПО ИДЕНТИФИКАТОРу жанра
               )query_in_1
          ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
              ( ВЫБЕРИТЕ идентификатор жанра, СУММА ( количество) КАК сумма_суммы
                ИЗ книги
                СГРУППИРОВАТЬ ПО ИДЕНТИФИКАТОРу жанра
                ЗАКАЗАТЬ ПО sum_amount DESC
                ПРЕДЕЛ  1
               ) запрос_в_2
          НА  запрос_в_1 . сумма_сумма =  запрос_в_2 . сумма_сумма
         ) ПОРЯДОК ПО названию;   
-- 2.2.9
ВЫБЕРИТЕ название КАК Название, имя_автор КАК Автор, СУММА ( книга . сумма  +  запас . сумма ) КАК Количество
ОТ поставки
ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга ИСПОЛЬЗОВАНИЕ(цена,название)
ВНУТРЕННЕЕ СОЕДИНЕНИЕ автора ON  author . имя_автор  =  источник . автор
СГРУППИРОВАТЬ ПО  автору . имя_автор , книга . название ;
-- 2.2.10
ВЫБЕРИТЕ название КАК Название, имя_автор КАК Автор, СУММА ( книга . сумма  +  запас . сумма ) КАК Количество
ОТ поставки
ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга ИСПОЛЬЗОВАНИЕ(цена,название)
ВНУТРЕННЕЕ СОЕДИНЕНИЕ автора ON  author . имя_автор  =  источник . автор
СГРУППИРОВАТЬ ПО  автору . имя_автор , книга . название ;

-- 2.3.2
ОБНОВИТЬ книгу
ВНУТРЕННЕЕ СОЕДИНЕНИЕ автора ON  author . id_автора  =  книга . author_id
INNER JOIN поставка  по книге . название  =  предложение . заглавие
и  поставка . автор  =  автор . имя_автор
 книга СЕТ . цена  = ( кн . цена  *  кн . количество  +  предложение . цена  *  предложение . количество ) / ( кн . количество  +  предложение . количество ), кн . сумма  =  книга . сумма  +  поставка . количество , поставка . сумма  =  0
ГДЕ  книга . цена  <>  поставка . цена ;

ВЫБЕРИТЕ  *  ИЗ книги;

ВЫБЕРИТЕ  *  ИЗ поставки;
-- 2.3.3
Вставить в автора (имя_автора)
ВЫБЕРИТЕ  поставку . автор
ОТ   автора
Поставка RIGHT JOIN на  автора . имя_автор  =  источник . автор
ГДЕ name_author IS Null ;

выбрать  *  от автора;
-- 2.3.4
ВСТАВИТЬ В книгу (название, author_id , цена, количество)
ВЫБЕРИТЕ название, author_id, цену, сумму
ИЗ
автор
ВНУТРЕННЕЕ СОЕДИНЕНИЕ поставляет ON  автору . имя_автор  =  источник . автор
ГДЕ сумма <>  0 ;

ВЫБЕРИТЕ  *  ИЗ книги;
-- 2.3.5
ОБНОВИТЬ книгу
НАБОР жанра_id = 
      (
       ВЫБЕРИТЕ идентификатор жанра
       ИЗ жанра
       ГДЕ name_genre =  ' Поэзия '
      )
ГДЕ book_id =  10 ;

ВЫБЕРИТЕ  *  ИЗ книги;

ОБНОВИТЬ книгу
НАБОР жанра_id = 
      (
       ВЫБЕРИТЕ идентификатор жанра
       ИЗ жанра
       ГДЕ name_genre =  ' Приключения '
      )
ГДЕ book_id =  11 ;

ВЫБЕРИТЕ  *  ИЗ книги;
-- 2.3.6
УДАЛИТЬ  ОТ автора
ГДЕ author_id В (
ВЫБЕРИТЕ author_id
ИЗ книги
СГРУППИРОВАТЬ ПО author_id
СУММА (  сумма ) <  20
);
ВЫБЕРИТЕ  *  ИЗ книги;
-- 2.3.7
УДАЛИТЬ  ИЗ жанра
ГДЕ ИД жанра В (
ВЫБЕРИТЕ идентификатор жанра
ИЗ книги
СГРУППИРОВАТЬ ПО ИДЕНТИФИКАТОРу жанра
 ИМЕЕТ COUNT (book_id ) <  4
);
ВЫБЕРИТЕ  *  ИЗ книги;

ВЫБЕРИТЕ  *  ИЗ жанра;
-- 2.3.8
УДАЛИТЬ  ОТ автора
С ИСПОЛЬЗОВАНИЕМ
    автор
     ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга ON  автора . id_автора  =  книга . author_id
     INNER JOIN жанр ON  жанр . идентификатор_жанра  =  книга . id_genre
ГДЕ название_жанр НРАВИТСЯ  " Поэзия " ;

ВЫБЕРИТЕ  *  ОТ автора;

ВЫБЕРИТЕ  *  ИЗ книги;
-- 2.3.9
УДАЛИТЬ  ОТ автора
С ИСПОЛЬЗОВАНИЕМ
    автор
     ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга ON  автора . id_автора  =  книга . author_id
     INNER JOIN жанр ON  жанр . идентификатор_жанра  =  книга . id_genre
ГДЕ название_жанр НРАВИТСЯ  " Поэзия " ;

ВЫБЕРИТЕ  *  ОТ автора;

ВЫБЕРИТЕ  *  ИЗ книги;

-- 2.4.5
ВЫБЕРИТЕ  купить . buy_id , название, цена, buy_book . количество
ОТ клиента ВНУТРЕННЕЕ СОЕДИНЕНИЕ купить ИСПОЛЬЗОВАНИЕ (client_id)
    ВНУТРЕННЕЕ СОЕДИНЕНИЕ buy_book ИСПОЛЬЗОВАНИЕ (buy_id)
    ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга ИСПОЛЬЗОВАНИЕ (book_id)
ГДЕ name_client =  ' Баранов Павел '
ЗАКАЗАТЬ ПО buy_id, забронировать . название ;
-- 2.4.6
ВЫБЕРИТЕ имя_автора, название, COUNT ( покупка_книги . количество ) КАК Количество
ОТ автора
Книга ВНУТРЕННЕГО СОЕДИНЕНИЯ ИСПОЛЬЗОВАНИЕ (author_id)
ВЛЕВО ПРИСОЕДИНЯЙТЕСЬ к buy_book, ИСПОЛЬЗУЯ (book_id)
СГРУППИРОВАТЬ ПО  книгам . название , имя_автор
ЗАКАЗАТЬ ПО имени_автору, названию;
-- 2.4.7
ВЫБЕРИТЕ name_city, COUNT (buy_id) AS  ' Количество '  FROM 
город
клиент внутреннего соединения ON  город . city_id  =  клиент . city_id
внутреннее соединение купить на клиенте  . client_id = купить . ID клиента  
сгруппировать по   названию_города
ЗАКАЗАТЬ ПО name_city ASC ;
-- 2.4.8
ВЫБЕРИТЕ buy_id, date_step_end
ОТ buy_step
ГДЕ step_id =  1  И date_step_end НЕ NULL
ЗАКАЗАТЬ ПО date_step_end;
-- 2.4.9
выберите buy_id,name_client, sum ( книга . цена * buy_book . сумма ) как Стоимость
из buy_book
присоединиться к покупке с помощью (buy_id)
ПРИСОЕДИНЯЙТЕСЬ к клиенту, используя (client_id)
присоединиться к книге, используя (book_id)
Сгруппировать ПО buy_id,name_client
  ЗАКАЗАТЬ ПО buy_id;
-- 2.4.10
ВЫБЕРИТЕ buy_id, name_step
С шага ВНУТРЕННЕЕ СОЕДИНЕНИЕ buy_step НА  шаге . шаг_ид  =  шаг_покупки . step_id
ГДЕ date_step_beg НЕ NULL  И date_step_end IS NULL
ЗАКАЗАТЬ ПО buy_id;
-- 2.4.11
ВЫБРАТЬ
  шаг_покупки . buy_id ,
  datediff(date_step_end, date_step_beg) как  ' Количество_дней ' ,
  IF(days_delivery - datediff(date_step_end, date_step_beg) > 0 , 0 ,abs(days_delivery - datediff(date_step_end, date_step_beg)))   as  ' Опоздание '
ИЗ
  buy_step
  Шаг ВНУТРЕННЕГО СОЕДИНЕНИЯ
  ON  buy_step . шаг_id  =  шаг . step_id
  ВНУТРЕННЕЕ СОЕДИНЕНИЕ купить
  ON  buy_step . buy_id  =  купить . buy_id
  ВНУТРЕННЕЕ СОЕДИНЕНИЕ клиент
  НА  купить . client_id  =  клиент . ID клиента
  ВНУТРЕННЕЕ СОЕДИНЕНИЕ город
  НА  клиенте . city_id  =  город . city_id
КУДА
  name_step IN ( ' Транспортировка ' )
  а также
  date_step_end НЕ NULL ;
-- 2.4.12
выберите отдельное name_client
от клиента
покупка внутреннего соединения с использованием (client_id)
внутреннее соединение buy_book с использованием (buy_id)
книга внутреннего соединения с использованием (book_id)
автор внутреннего соединения с использованием (author_id)
где имя_автор как  ' Достоевск% '
заказать по name_client
-- 2.4.13
ВЫБЕРИТЕ название_жанр, Количество
ИЗ
    ( ВЫБЕРИТЕ название_жанр, сумма (количество_1) как Количество
        ОТ ( ВЫБЕРИТЕ book_id, СУММА ( сумма) КАК сумма_1
        ОТ buy_book
        СГРУППИРОВАТЬ ПО book_id) AS temp
        INNER JOIN book ON  temp . book_id  =  книга . book_id
        ВНУТРЕННЕЕ СОЕДИНЕНИЕ жанра ON  book . идентификатор_жанра  =  жанр . id_genre
        СГРУППИРОВАТЬ ПО названию_жанру) как k
        где к.Количество IN ( SELECT  MAX (t.Количество) as n
                               ОТ ( ВЫБЕРИТЕ название_жанр, сумма (количество_1) как Количество
                               ОТ ( ВЫБЕРИТЕ book_id, СУММА ( сумма) КАК сумма_1
                               ОТ buy_book
                               СГРУППИРОВАТЬ ПО book_id) AS temp
                               INNER JOIN book ON  temp . book_id  =  книга . book_id
                               ВНУТРЕННЕЕ СОЕДИНЕНИЕ жанра ON  book . идентификатор_жанра  =  жанр . id_genre
                               GROUP BY name_genre) as t);
-- 2.4.14
ВЫБЕРИТЕ ГОД(дата_оплаты) КАК ГОД , НАЗВАНИЕ МЕСЯЦА(дата_платежа) КАК Месяц, СУММА ( цена * сумма) КАК Сумма
ИЗ buy_archive
ГРУППА ПО Год, Месяц
СОЮЗ
ВЫБЕРИТЕ ГОД(дата_шага_конец) КАК ГОД , МЕСЯЦ(дата_шага_конец) КАК Месяц, СУММА ( цена * покупка_книга . сумма ) КАК Сумма
ОТ buy_step
        ВНУТРЕННЕЕ СОЕДИНЕНИЕ buy_book ИСПОЛЬЗОВАНИЕ (buy_id)
    ВНУТРЕННЕЕ СОЕДИНЕНИЕ книга ИСПОЛЬЗОВАНИЕ (book_id)
        где date_step_end не равно нулю,  а step_id =  1
        ГРУППА ПО Год, Месяц
        ЗАКАЗАТЬ ПО Месяц АСЦ , Год АСЦ ;
-- 2.4.15
ВЫБЕРИТЕ название, сумма (Количество) как  ' Количество ' , сумма (Сумма) как  ' Сумма '
ИЗ
( выберите название, сумму ( buy_archive . сумма ) как  « Количество » , сумму ( buy_archive . цена * buy_archive . количество ) как  « Сумма »  из buy_archive
ПРИСОЕДИНЯЙТЕСЬ к книге, ИСПОЛЬЗУЯ (book_id)
группировать по названию
союз всех
выберите название, сумму ( книга_покупки . сумма ) как  ' Количество ' , сумму (цена * книга_покупки . сумма ) как  ' Сумма '  из книги
ПРИСОЕДИНЯЙТЕСЬ к buy_book, используя (book_id)
ПРИСОЕДИНЯЙТЕСЬ к buy_step, используя (buy_id)
Шаг ПРИСОЕДИНЯЙТЕСЬ , используя (step_id)
где  шаг . name_step  =  ' Оплата '  и  buy_step . date_step_end  не равно нулю
группировать по заголовку) как query_in
группировать по названию
упорядочить по сумме по убыванию  
-- 2.4.16
ВЫБЕРИТЕ название, сумма (Количество) как  ' Количество ' , сумма (Сумма) как  ' Сумма '
ИЗ
( выберите название, сумму ( buy_archive . сумма ) как  « Количество » , сумму ( buy_archive . цена * buy_archive . количество ) как  « Сумма »  из buy_archive
ПРИСОЕДИНЯЙТЕСЬ к книге, ИСПОЛЬЗУЯ (book_id)
группировать по названию
союз всех
выберите название, сумму ( книга_покупки . сумма ) как  ' Количество ' , сумму (цена * книга_покупки . сумма ) как  ' Сумма '  из книги
ПРИСОЕДИНЯЙТЕСЬ к buy_book, используя (book_id)
ПРИСОЕДИНЯЙТЕСЬ к buy_step, используя (buy_id)
Шаг ПРИСОЕДИНЯЙТЕСЬ , используя (step_id)
где  шаг . name_step  =  ' Оплата '  и  buy_step . date_step_end  не равно нулю
группировать по заголовку) как query_in
группировать по названию
упорядочить по сумме по убыванию
